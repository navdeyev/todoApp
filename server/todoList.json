[
  {
    "id": "todo-1",
    "title": "Initialise the repo",
    "goal": "Get a working repo with all scripts set up for development",
    "steps": [
      {
        "id": "todo-1-step-1",
        "title": "Install create-react-app",
        "details": "Run 'yarn global add create-react-app' from your console"
      },
      {
        "id": "todo-1-step-2",
        "title": "Initialise the repo",
        "details": "Go to directory and run 'create-react-app todoapp --scripts-version=react-scripts-ts' to initialise the repo in todoapp folder"
      }
    ],
    "status": "COMPLETE"
  },
  {
    "id": "todo-2",
    "title": "Simple koa backend",
    "goal": "Introduce a simple mock backend that will emulate the work of a real backend",
    "steps": [
      {
        "id": "todo-2-step-1",
        "title": "Add necessary libraries",
        "details": "Add koa, koa-router and nodemon to the project"
      },
      {
        "id": "todo-2-step-2",
        "title": "Create 'server' directory",
        "details": "Server directory will contain all server-side code. Server.js contains the server launch script."
      }
    ],
    "status": "COMPLETE"
  },
  {
    "id": "todo-3",
    "title": "Make a call",
    "goal": "Integrate front-end with backend",
    "steps": [
      {
        "id": "todo-3-step-1",
        "title": "Add cors capabilities to backend",
        "details": "Add koa-cors library and apply it in the backend"
      },
      {
        "id": "todo-3-step-2",
        "title": "Wrap fetch",
        "details": "Wrap fetch api with request method that will do the proper set up for fetch calls"
      },
      {
        "id": "todo-3-step-3",
        "title": "Add ApiService",
        "details": "ApiService should expose specific methods to retrieve data, hiding the details of the calls"
      },
      {
        "id": "todo-3-step-4",
        "title": "Make a test call",
        "details": "Call the backend from the App component, updating it's state when the promise is resolved"
      }
    ],
    "status": "COMPLETE"
  },
  {
    "id": "todo-4",
    "title": "Redux store and Routing",
    "goal": "Introduce redux store to properly manage data in the app",
    "steps": [
      {
        "id": "todo-4-step-1",
        "title": "Add necessary redux libraries with devtools support",
        "details": "Add redux, react-redux, redux-thunk, and redux-devtools-extension"
      },
      {
        "id": "todo-4-step-1",
        "title": "Add necessary routing libraries",
        "details": "Add react-router and react-router-redux"
      },
      {
        "id": "todo-4-step-3",
        "title": "Create rootReducer",
        "details": "Use combine reducers to initialize rootReducer, make it aware of routing"
      },
      {
        "id": "todo-4-step-4",
        "title": "Initialise the store",
        "details": "Write a function that will initialise redux middlewares, store enhancers and create the actual store"
      }
    ],
    "status": "COMPLETE"
  },
  {
    "id": "todo-5",
    "title": "Put some data on the store and display it in a connected component",
    "goal": "The App component will no longer require private state if data is moved to the store",
    "steps": [
      {
        "id": "todo-5-step-1",
        "title": "Model todos state",
        "details": "Todos state will need to handle loading indicator and the actual data. Show this in your types."
      },
      {
        "id": "todo-5-step-2",
        "title": "Create todos actions enum and todos reducer",
        "details": "Using combineReducers the update of each individual field on the state can be simplified"
      },
      {
        "id": "todo-5-step-3",
        "title": "Write the loadTodos function",
        "details": "The loadTodos action will handle the async call to the backend and dispatch multiple actions"
      },
      {
        "id": "todo-5-step-4",
        "title": "Create TodosContainer - connected component",
        "details": "TodosContainer should actually execute call to the server in componentDidMount() and display the retrieved data."
      }
    ],
    "status": "IN_PROGRESS"
  }
]